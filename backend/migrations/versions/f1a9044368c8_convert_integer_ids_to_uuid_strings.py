"""Convert integer IDs to UUID strings

Revision ID: f1a9044368c8
Revises: 
Create Date: 2025-05-27 19:18:56.330021

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'f1a9044368c8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('brokers_temp')
    op.drop_table('conversations')
    op.drop_index('ix_books_author', table_name='books')
    op.drop_index('ix_books_id', table_name='books')
    op.drop_index('ix_books_title', table_name='books')
    op.drop_table('books')
    op.drop_table('specializations_temp')
    op.drop_table('messages')
    op.drop_index('id', table_name='users_backup')
    op.drop_index('ix_users_email', table_name='users_backup')
    op.drop_table('users_backup')
    op.alter_column('banking_connections', 'user_id',
               existing_type=mysql.VARCHAR(length=36),
               nullable=False)
    op.alter_column('broker_client_matches', 'user_id',
               existing_type=mysql.VARCHAR(length=36),
               nullable=False)
    op.alter_column('broker_reviews', 'user_id',
               existing_type=mysql.VARCHAR(length=36),
               nullable=False)
    op.alter_column('broker_reviews', 'id',
               existing_type=mysql.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.create_unique_constraint(None, 'broker_reviews', ['id'])
    op.create_foreign_key(None, 'broker_reviews', 'brokers', ['broker_id'], ['id'])
    op.create_foreign_key(None, 'broker_specialization', 'specializations', ['specialization_id'], ['id'])
    op.create_foreign_key(None, 'broker_specialization', 'brokers', ['broker_id'], ['id'])
    op.alter_column('brokers', 'user_id',
               existing_type=mysql.VARCHAR(length=36),
               nullable=False)
    op.create_unique_constraint(None, 'brokers', ['user_id'])
    op.alter_column('payments', 'user_id',
               existing_type=mysql.VARCHAR(length=36),
               nullable=False)
    op.alter_column('quiz_questions', 'question_type',
               existing_type=mysql.ENUM('multiple_choice', 'multiple_select', 'single_choice', 'text', 'scale', 'boolean'),
               type_=app.database.models.base.EnumAsStr(length=50),
               existing_nullable=False)
    op.alter_column('quizzes', 'category',
               existing_type=mysql.ENUM('FINANCIAL_GOALS', 'EXPERIENCE', 'RISK_TOLERANCE', 'PREFERENCES', 'BROKER_MATCHING'),
               type_=app.database.models.base.EnumAsStr(length=50),
               existing_nullable=False)
    op.create_foreign_key(None, 'search_queries', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'user_activities', 'users', ['user_id'], ['id'])
    op.alter_column('user_quiz_responses', 'user_id',
               existing_type=mysql.VARCHAR(length=36),
               nullable=False)
    op.alter_column('users', 'is_deleted',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'updated_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
    op.drop_index('email', table_name='users')
    op.drop_index('idx_email', table_name='users')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_unique_constraint(None, 'users', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_index('idx_email', 'users', ['email'], unique=False)
    op.create_index('email', 'users', ['email'], unique=True)
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=mysql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=mysql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'is_deleted',
               existing_type=sa.DateTime(timezone=True),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('user_quiz_responses', 'user_id',
               existing_type=mysql.VARCHAR(length=36),
               nullable=True)
    op.drop_constraint(None, 'user_activities', type_='foreignkey')
    op.drop_constraint(None, 'search_queries', type_='foreignkey')
    op.alter_column('quizzes', 'category',
               existing_type=app.database.models.base.EnumAsStr(length=50),
               type_=mysql.ENUM('FINANCIAL_GOALS', 'EXPERIENCE', 'RISK_TOLERANCE', 'PREFERENCES', 'BROKER_MATCHING'),
               existing_nullable=False)
    op.alter_column('quiz_questions', 'question_type',
               existing_type=app.database.models.base.EnumAsStr(length=50),
               type_=mysql.ENUM('multiple_choice', 'multiple_select', 'single_choice', 'text', 'scale', 'boolean'),
               existing_nullable=False)
    op.alter_column('payments', 'user_id',
               existing_type=mysql.VARCHAR(length=36),
               nullable=True)
    op.drop_constraint(None, 'brokers', type_='unique')
    op.alter_column('brokers', 'user_id',
               existing_type=mysql.VARCHAR(length=36),
               nullable=True)
    op.drop_constraint(None, 'broker_specialization', type_='foreignkey')
    op.drop_constraint(None, 'broker_specialization', type_='foreignkey')
    op.drop_constraint(None, 'broker_reviews', type_='foreignkey')
    op.drop_constraint(None, 'broker_reviews', type_='unique')
    op.alter_column('broker_reviews', 'id',
               existing_type=sa.String(length=36),
               type_=mysql.INTEGER(),
               existing_nullable=False)
    op.alter_column('broker_reviews', 'user_id',
               existing_type=mysql.VARCHAR(length=36),
               nullable=True)
    op.alter_column('broker_client_matches', 'user_id',
               existing_type=mysql.VARCHAR(length=36),
               nullable=True)
    op.alter_column('banking_connections', 'user_id',
               existing_type=mysql.VARCHAR(length=36),
               nullable=True)
    op.create_table('users_backup',
    sa.Column('first_name', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('last_name', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('phone_number', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('password_hash', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('is_verified', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('user_type', mysql.ENUM('CLIENT', 'BROKER', 'ADMIN'), nullable=False),
    sa.Column('is_deleted', mysql.DATETIME(), nullable=True),
    sa.Column('id', mysql.VARCHAR(length=36), nullable=False),
    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('(now())'), nullable=False),
    sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text('(now())'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_users_email', 'users_backup', ['email'], unique=True)
    op.create_index('id', 'users_backup', ['id'], unique=True)
    op.create_table('messages',
    sa.Column('id', mysql.VARCHAR(length=36), nullable=False),
    sa.Column('conversation_id', mysql.VARCHAR(length=36), nullable=False),
    sa.Column('content', mysql.TEXT(), nullable=False),
    sa.Column('direction', mysql.VARCHAR(length=20), nullable=False),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], name='messages_ibfk_1'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specializations_temp',
    sa.Column('name', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('description', mysql.TEXT(), nullable=True),
    sa.Column('is_deleted', mysql.DATETIME(), nullable=True),
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', mysql.DATETIME(), nullable=False),
    sa.Column('updated_at', mysql.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('books',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('author', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('content', mysql.TEXT(), nullable=False),
    sa.Column('file_path', mysql.VARCHAR(length=512), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_books_title', 'books', ['title'], unique=False)
    op.create_index('ix_books_id', 'books', ['id'], unique=False)
    op.create_index('ix_books_author', 'books', ['author'], unique=False)
    op.create_table('conversations',
    sa.Column('id', mysql.VARCHAR(length=36), nullable=False),
    sa.Column('user_id', mysql.VARCHAR(length=36), nullable=False),
    sa.Column('status', mysql.VARCHAR(length=20), nullable=False),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('brokers_temp',
    sa.Column('user_id', mysql.VARCHAR(length=36), nullable=False),
    sa.Column('license_number', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('license_status', mysql.ENUM('ACTIVE', 'PENDING', 'REVOKED', 'EXPIRED'), nullable=False),
    sa.Column('company_name', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('years_of_experience', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('experience_level', mysql.ENUM('JUNIOR', 'INTERMEDIATE', 'SENIOR', 'EXPERT'), nullable=False),
    sa.Column('office_address', mysql.TEXT(), nullable=True),
    sa.Column('service_areas', mysql.JSON(), nullable=True),
    sa.Column('bio', mysql.TEXT(), nullable=True),
    sa.Column('profile_image', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('website', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('average_rating', mysql.FLOAT(), nullable=True),
    sa.Column('success_rate', mysql.FLOAT(), nullable=True),
    sa.Column('is_verified', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('is_deleted', mysql.DATETIME(), nullable=True),
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', mysql.DATETIME(), nullable=False),
    sa.Column('updated_at', mysql.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ### 